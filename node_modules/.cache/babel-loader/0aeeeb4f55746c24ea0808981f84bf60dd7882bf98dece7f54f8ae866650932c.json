{"ast":null,"code":"export const authors = [{\n  id: 1,\n  name: \"Nizar Qabbani\",\n  image: \"/authors/nizar.jpg\"\n}, {\n  id: 2,\n  name: \"Mahmoud Darwish\",\n  image: \"/authors/darwish.jpg\"\n}, {\n  id: 3,\n  name: \"Tony Robbins\",\n  image: \"/authors/tony.jpg\"\n}, {\n  id: 4,\n  name: \"Elif Shafak\",\n  image: \"/authors/shafak.jpg\"\n}, {\n  id: 5,\n  name: \"Brian Tracy\",\n  image: \"/authors/brain.jpg\"\n}, {\n  id: 6,\n  name: \"Nassim Nicholas Taleb\",\n  image: \"/authors/nassim.jpg\"\n}, {\n  id: 7,\n  name: \"Khalil Gibran\",\n  image: \"/authors/khalil.jpg\"\n}, {\n  id: 8,\n  name: \"Debbie Ford\",\n  image: \"/authors/ford.jpg\"\n}, {\n  id: 9,\n  name: \"Paulo Coelho\",\n  image: \"/authors/paulo.jpg\"\n}, {\n  id: 10,\n  name: \"Wayne Dyer\",\n  image: \"/authors/wayne.jpg\"\n}, {\n  id: 11,\n  name: \"Albert Camus\",\n  image: \"/authors/albert.jpg\"\n}, {\n  id: 12,\n  name: \"George Orwell\",\n  image: \"/authors/george.jpg\"\n}, {\n  id: 13,\n  name: \"Robert Kiyosaki\",\n  image: \"/authors/kiyosaki.jpg\"\n}, {\n  id: 14,\n  name: \"Warren Buffett\",\n  image: \"/authors/buffett.jpg\"\n}, {\n  id: 15,\n  name: \"Ernest Hemingway\",\n  image: \"/authors/eh.jpg\"\n}, {\n  id: 16,\n  name: \"Mark Twain\",\n  image: \"/authors/mark.jpg\"\n}, {\n  id: 17,\n  name: \"Xavier Crement\",\n  image: \"/authors/crement.jpg\"\n}, {\n  id: 18,\n  name: \"Rolf Dobelli\",\n  image: \"/authors/rolf.jpg\"\n}, {\n  id: 19,\n  name: \"George Samuel Clason\",\n  image: \"/authors/clason.jpg\"\n}, {\n  id: 20,\n  name: \"Phil Knight\",\n  image: \"/authors/phil.jpg\"\n}, {\n  id: 21,\n  name: \"Oscar Wilde\",\n  image: \"/authors/oscar.jpg\"\n}, {\n  id: 22,\n  name: \"James Clear\",\n  image: \"/authors/james.jpg\"\n}, {\n  id: 23,\n  name: \"Colleen Hoover\",\n  image: \"/authors/hoover.jpg\"\n}, {\n  id: 24,\n  name: \"Sajni Patel\",\n  image: \"/authors/patel.jpg\"\n}, {\n  id: 25,\n  name: \"Taylor Jenkins Reid\",\n  image: \"/authors/reid.jpg\"\n}, {\n  id: 26,\n  name: \"Napolen Hill\",\n  image: \"/authors/hill.jpg\"\n}, {\n  id: 27,\n  name: \"Chris Voss\",\n  image: \"/authors/voss.jpg\"\n}, {\n  id: 28,\n  name: \"Vex King\",\n  image: \"/authors/king.jpg\"\n}, {\n  id: 29,\n  name: \"Juliette Aristides\",\n  image: \"/authors/j.jpg\"\n}, {\n  id: 30,\n  name: \"Leo Tolstoy\",\n  image: \"/authors/leo.jpg\"\n}].sort((a, b) => a.name > b.name ? 1 : -1);","map":{"version":3,"names":["authors","id","name","image","sort","a","b"],"sources":["F:/Courses/React/projects/Ecommerce booking website/code X/ecommerce_book_store/src/data/authors.js"],"sourcesContent":["export const authors = [\n    {\n        id: 1,\n        name: \"Nizar Qabbani\",\n        image: \"/authors/nizar.jpg\",\n    },\n    {\n        id: 2,\n        name: \"Mahmoud Darwish\",\n        image: \"/authors/darwish.jpg\",\n    },\n    {\n        id: 3,\n        name: \"Tony Robbins\",\n        image: \"/authors/tony.jpg\",\n    },\n    {\n        id: 4,\n        name: \"Elif Shafak\",\n        image: \"/authors/shafak.jpg\",\n    },\n    {\n        id:5,\n        name: \"Brian Tracy\",\n        image: \"/authors/brain.jpg\",\n    },\n    {\n        id:6,\n        name: \"Nassim Nicholas Taleb\",\n        image: \"/authors/nassim.jpg\",\n    },\n    {\n        id: 7,\n        name: \"Khalil Gibran\",\n        image: \"/authors/khalil.jpg\",\n    },\n    {\n        id: 8,\n        name: \"Debbie Ford\",\n        image: \"/authors/ford.jpg\",\n    },\n    {\n        id: 9,\n        name: \"Paulo Coelho\",\n        image: \"/authors/paulo.jpg\",\n    },\n    {\n        id: 10,\n        name: \"Wayne Dyer\",\n        image: \"/authors/wayne.jpg\",\n    },\n    {\n        id:11,\n        name: \"Albert Camus\",\n        image: \"/authors/albert.jpg\",\n    },\n    {\n        id:12,\n        name: \"George Orwell\",\n        image: \"/authors/george.jpg\",\n    },\n    {\n        id: 13,\n        name: \"Robert Kiyosaki\",\n        image: \"/authors/kiyosaki.jpg\",\n    },\n    {\n        id: 14,\n        name: \"Warren Buffett\",\n        image: \"/authors/buffett.jpg\",\n    },\n    {\n        id: 15,\n        name: \"Ernest Hemingway\",\n        image: \"/authors/eh.jpg\",\n    },\n    {\n        id: 16,\n        name: \"Mark Twain\",\n        image: \"/authors/mark.jpg\",\n    },\n    {\n        id:17,\n        name: \"Xavier Crement\",\n        image: \"/authors/crement.jpg\",\n    },\n    {\n        id:18,\n        name: \"Rolf Dobelli\",\n        image: \"/authors/rolf.jpg\",\n    },\n    {\n        id: 19,\n        name: \"George Samuel Clason\",\n        image: \"/authors/clason.jpg\",\n    },\n    {\n        id: 20,\n        name: \"Phil Knight\",\n        image: \"/authors/phil.jpg\",\n    },\n    {\n        id: 21,\n        name: \"Oscar Wilde\",\n        image: \"/authors/oscar.jpg\",\n    },\n    {\n        id: 22,\n        name: \"James Clear\",\n        image: \"/authors/james.jpg\",\n    },\n    {\n        id:23,\n        name: \"Colleen Hoover\",\n        image: \"/authors/hoover.jpg\",\n    },\n    {\n        id:24,\n        name: \"Sajni Patel\",\n        image: \"/authors/patel.jpg\",\n    },\n    {\n        id:25,\n        name: \"Taylor Jenkins Reid\",\n        image: \"/authors/reid.jpg\",\n    },\n    {\n        id:26,\n        name: \"Napolen Hill\",\n        image: \"/authors/hill.jpg\",\n    },\n    {\n        id:27,\n        name: \"Chris Voss\",\n        image: \"/authors/voss.jpg\",\n    },\n    {\n        id:28,\n        name: \"Vex King\",\n        image: \"/authors/king.jpg\",\n    },\n    {\n        id:29,\n        name: \"Juliette Aristides\",\n        image:\"/authors/j.jpg\",\n    },\n    {\n        id:30,\n        name:\"Leo Tolstoy\",\n        image:\"/authors/leo.jpg\"\n    }\n].sort((a, b) => (a.name > b.name ? 1 : -1));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}